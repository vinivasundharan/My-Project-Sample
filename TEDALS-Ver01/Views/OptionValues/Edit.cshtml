@model TEDALS_Ver01.Models.OptionValue

@{
    ViewBag.Title = "Edit Option Value";
}

<ul class="breadcrumb">
    You are Here :
    <li>@Html.ActionLink("Home", "Index", "Home")</li>
    <li>@Html.ActionLink("System family", "Index", "LsystemFamilies")</li>
    <li>@Html.ActionLink("Systems", "Index", "Lsystems")</li>
    <li>@Html.ActionLink("Options", "Index", "Options")</li>
    <li>Edit option Value</li>
</ul>

<h2>Edit Option value</h2>
<div class="col-md-2">
    <ul class="nav navbar-nav">
        <li>@Html.ActionLink("View System Families", "Index", "LsystemFamilies")</li>
        <li>@Html.ActionLink("Add New System Family", "Create", "Lsystemfamilies")</li>
        <li>@Html.ActionLink("View System Independent Option", "ViewOptions", "Options", new { id = 1038 }, null)</li>
        <li>@Html.ActionLink("View all Systems", "Index", "Lsystems")</li>
    </ul>
</div>

<div class="col-md-10">
    <h4>Family Name : @Model.Option.Lsystem.LsystemFamily.FamilyName</h4>
    <h4>System : @Model.Option.Lsystem.LsystemName</h4>
    <h4>Option : @Model.Option.OptionName</h4>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.OptionValueID)

            <div class="form-group">
                @Html.LabelFor(model => model.OptionVal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OptionVal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OptionVal, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DescriptionEN, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DescriptionEN, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DescriptionEN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DescriptionDE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DescriptionDE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DescriptionDE, "", new { @class = "text-danger" })
                </div>
            </div>
        

            <div class="form-group">
                @Html.LabelFor(model => model.OptionID, "OptionID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("OptionID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OptionID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "ViewOptionValues", "OptionValues", new { id = Model.OptionID},null)
    </div>
</div>